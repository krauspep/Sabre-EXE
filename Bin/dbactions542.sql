ALTER TABLE COMPANY ADD 
AUTO_JOB_CLOSE Integer DEFAULT 1;

ALTER TABLE ATTENDANCE ADD 
WORK_CODE Integer DEFAULT -1;

ALTER TABLE ATTENDANCE_ARCHIVE ADD 
WORK_CODE Integer DEFAULT -1;

CREATE GENERATOR WORK_CODES_GEN;

SET GENERATOR WORK_CODES_GEN TO 1;

CREATE TABLE WORK_CODES
(
  WORK_CODE_KEY DM_KEY NOT NULL,
  COMPANY_KEY INTEGER NOT NULL,
  WORK_CODE DM_KEY_N1 DEFAULT -1,
  NAME VARCHAR(30),
  DUMMY Smallint DEFAULT 0,
  DELETED DM_BOOLEAN DEFAULT 0,
  ACTIVE_RECORD DM_ACTIVE DEFAULT 1,
  PRIMARY KEY (WORK_CODE_KEY)
);

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON WORK_CODES TO  SYSDBA WITH GRANT OPTION;

ALTER TABLE DEVICE_CONFIGURATION ADD 
WORK_CODES Smallint DEFAULT 0;

UPDATE DEVICE_CONFIGURATION 
SET WORK_CODES = 0;

CREATE GENERATOR WORK_CALCULATION_GEN;

SET GENERATOR WORK_CALCULATION_GEN TO 1;

CREATE TABLE WORK_CALCULATION
(
  WORK_CALCULATION_KEY DM_KEY NOT NULL,
  FROM_DATE DATE,
  FROM_TIME TIME,
  TO_DATE DATE,
  TO_TIME TIME,
  MINUTES INTEGER,
  ENROLL_ID INTEGER,
  WORK_CODE INTEGER,
  PRIMARY KEY (WORK_CALCULATION_KEY)
);

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON WORK_CALCULATION TO  SYSDBA WITH GRANT OPTION;

CREATE TRIGGER TR_WORK_CALCULATION FOR WORK_CALCULATION ACTIVE
BEFORE INSERT POSITION 0
AS
begin
  if (new.WORK_CALCULATION_KEY is null)
  then begin
         new.WORK_CALCULATION_KEY = gen_id(WORK_CALCULATION_GEN, 1);
       end
end
