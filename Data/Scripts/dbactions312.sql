CREATE GENERATOR VEHICLE_MAKE_GEN;

CREATE TABLE VEHICLE_MAKE
(
  VEHICLE_MAKE_KEY DM_KEY,
  VEHICLE_MAKE DM_VARCHAR_20,
  ACTIVE_RECORD DM_ACTIVE DEFAULT 1,
  DELETED DM_BOOLEAN DEFAULT 0,
  PRIMARY KEY (VEHICLE_MAKE_KEY)
);


GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON VEHICLE_MAKE TO SYSDBA WITH GRANT OPTION;

CREATE TRIGGER TR_VEHICLE_MAKE FOR VEHICLE_MAKE ACTIVE BEFORE INSERT POSITION 0
AS
begin
  if (new.VEHICLE_MAKE_KEY is null)
  then begin
         new.VEHICLE_MAKE_KEY = gen_id(VEHICLE_MAKE_GEN, 1);
       end
end

CREATE GENERATOR VEHICLE_GEN;

CREATE TABLE VEHICLE
(
  VEHICLE_KEY DM_KEY,
  VEHICLE_MAKE_KEY DM_KEY,
  VEHICLE_COLOUR DM_VARCHAR_12,
  VEHICLE_REG_NO DM_VARCHAR_12,
  ACTIVE_RECORD DM_ACTIVE DEFAULT 1,
  DELETED DM_BOOLEAN DEFAULT 0,
  PRIMARY KEY (VEHICLE_KEY)
);


GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON VEHICLE TO SYSDBA WITH GRANT OPTION;

CREATE TRIGGER TR_VEHICLE FOR VEHICLE ACTIVE BEFORE INSERT POSITION 0
AS
begin
  if (new.VEHICLE_KEY is null)
  then begin
         new.VEHICLE_KEY = gen_id(VEHICLE_GEN, 1);
       end
end


CREATE GENERATOR VEHICLE_GENERIC_LINK_GEN;

CREATE TABLE VEHICLE_GENERIC_LINK
(
  VEHICLE_GENERIC_LINK_KEY DM_KEY,
  GENERIC_KEY DM_KEY,
  COMPANY_TYPE DM_SMALLINT,
  ACTIVE_RECORD DM_ACTIVE DEFAULT 1,
  DELETED DM_BOOLEAN DEFAULT 0,
  PRIMARY KEY (VEHICLE_GENERIC_LINK_KEY)
);


GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON VEHICLE_GENERIC_LINK TO SYSDBA WITH GRANT OPTION;

CREATE TRIGGER TR_VEHICLE_GENERIC_LINK FOR VEHICLE_GENERIC_LINK ACTIVE BEFORE INSERT POSITION 0
AS
begin
  if (new.VEHICLE_GENERIC_LINK_KEY is null)
  then begin
         new.VEHICLE_GENERIC_LINK_KEY = gen_id(VEHICLE_GENERIC_LINK_GEN, 1);
       end
end


