CREATE GENERATOR CRIMINAL_RECORD_GEN;

CREATE TABLE CRIMINAL_RECORD
(
  CRIMINAL_RECORD_KEY DM_KEY,
  CRIME_DATE DM_DATE,
  CRIME_TYPE_KEY DM_KEY_N1,
  LOCALITY_KEY DM_KEY_N1,
  ARRESTED DM_BOOLEAN,
  CONVICTED DM_BOOLEAN,
  DELETED DM_BOOLEAN DEFAULT 0,
  ACTIVE_RECORD DM_ACTIVE DEFAULT 1,
  PRIMARY KEY (CRIMINAL_RECORD_KEY)
);

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON CRIMINAL_RECORD TO  "SYSDBA" WITH GRANT OPTION;

CREATE TRIGGER TR_CRIMINAL_RECORD FOR CRIMINAL_RECORD
ACTIVE BEFORE INSERT POSITION 0
AS
begin
  if (new.CRIMINAL_RECORD_KEY is null)
  then begin
         new.CRIMINAL_RECORD_KEY = gen_id(CRIMINAL_RECORD_GEN, 1);
       end
end

CREATE GENERATOR CRIME_TYPE_GEN;

CREATE TABLE CRIME_TYPE
(
  CRIME_TYPE_KEY DM_KEY,
  CRIME_TYPE_NAME DM_NAME,
  DELETED DM_BOOLEAN DEFAULT 0,
  ACTIVE_RECORD DM_ACTIVE DEFAULT 1,
  PRIMARY KEY (CRIME_TYPE_KEY)
);

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON CRIME_TYPE TO  "SYSDBA" WITH GRANT OPTION;

CREATE TRIGGER TR_CRIME_TYPE FOR CRIME_TYPE
ACTIVE BEFORE INSERT POSITION 0
AS
begin
  if (new.CRIME_TYPE_KEY is null)
  then begin
         new.CRIME_TYPE_KEY = gen_id(CRIME_TYPE_GEN, 1);
       end
end

CREATE GENERATOR CRIME_LOCALITY_GEN;

CREATE TABLE CRIME_LOCALITY
(
  CRIME_LOCALITY_KEY DM_KEY,
  CRIME_LOCALITY_NAME DM_NAME,
  DELETED DM_BOOLEAN DEFAULT 0,
  ACTIVE_RECORD DM_ACTIVE DEFAULT 1,
  PRIMARY KEY (CRIME_LOCALITY_KEY)
);

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON CRIME_LOCALITY TO  "SYSDBA" WITH GRANT OPTION;

CREATE TRIGGER TR_CRIME_LOCALITY FOR CRIME_LOCALITY
ACTIVE BEFORE INSERT POSITION 0
AS
begin
  if (new.CRIME_LOCALITY_KEY is null)
  then begin
         new.CRIME_LOCALITY_KEY = gen_id(CRIME_LOCALITY_GEN, 1);
       end
end