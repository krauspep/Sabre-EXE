ALTER TABLE CAMERA_MAKE ADD CAMERA_IMAGE DM_VARCHAR_20;

ALTER TABLE CAMERA_MAKE ADD MONITOR_BACKGROUND_COLOUR DM_COLOUR_NAME;

CREATE GENERATOR CAMERA_CONFIGURATION_GEN;

CREATE TABLE CAMERA_CONFIGURATION
(
  CAMERA_CONFIGURATION_KEY DM_KEY,
  COMPANY_KEY DM_KEY NOT NULL,
  TERMINAL_KEY DM_KEY NOT NULL,
  DEVICE_LOCATION_KEY DM_KEY,
  DEPARTMENT_KEY DM_KEY NOT NULL,
  DEVICE_IP DM_IP,
  DEVICE_PORT DM_PORT,
  DEVICE_DESCRIPTION DM_BLOB2,
  DELETED DM_BOOLEAN,
  STATUS_SOURCE DM_CHAR,
  DEVICE_FUNCTION DM_SMALLINT,
  DEVICE_TYPE_KEY DM_KEY,
  DEVICE_ACTIVE DM_BOOLEAN,
  DEVICE_AUTO_CONNECT DM_BOOLEAN,
  IS_SELECTED DM_FALSE,
  DEVICE_NAME DM_NAME,
  COMMUNICATION_TYPE DM_CHAR,
  SERIAL_PORT DM_COM_PORT,
  BAUDE_RATE DM_INTEGER,
  SERIAL_NO DM_DEVICE_SERIAL_NO,
  DEVICE_ID DM_SMALLINT,
  ACTIVE_RECORD DM_ACTIVE DEFAULT 1,
  DOOR_LOCK_CONTROL DM_BOOLEAN DEFAULT 0,
  TCP_TYPE DM_CHAR,
  DEVICE_DOMAIN_NAME DM_NAME_NULL,
  PRIMARY KEY (CAMERA_CONFIGURATION_KEY)
);


GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON CAMERA_MAKE TO SYSDBA WITH GRANT OPTION;

CREATE TRIGGER TR_CAMERA_CONFIGURATION FOR CAMERA_CONFIGURATION ACTIVE BEFORE INSERT POSITION 0
AS
begin
  if (new.CAMERA_CONFIGURATION_KEY is null)
  then begin
         new.CAMERA_CONFIGURATION_KEY = gen_id(CAMERA_CONFIGURATION_GEN, 1);
       end
end


